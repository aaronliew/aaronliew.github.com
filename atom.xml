<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Aaron Liew's Blog]]></title>
  <link href="http://aaronliew.github.io/atom.xml" rel="self"/>
  <link href="http://aaronliew.github.io/"/>
  <updated>2014-03-05T16:04:13+08:00</updated>
  <id>http://aaronliew.github.io/</id>
  <author>
    <name><![CDATA[Aaron Liew]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Movie Searching App]]></title>
    <link href="http://aaronliew.github.io/blog/2014/03/05/day-four/"/>
    <updated>2014-03-05T10:00:17+08:00</updated>
    <id>http://aaronliew.github.io/blog/2014/03/05/day-four</id>
    <content type="html"><![CDATA[<p>Movie Search Android Application was created. Figures below show
screenshots of the UI of the android in order to have clear on picture
on the functions of the app.
<img class="center" src="http://aaronliew.github.io/images/DayFour/MovieSearchApp.JPG" title="LinearLayout" >
<img class="center" src="http://aaronliew.github.io/images/DayFour/Toast.JPG" title="LinearLayout" ></p>

<p>In the initial development, Toast method was used to show the popup message
after pressing the search button. There are two types of layout: relative layout
and linear layout.</p>

<p><img class="center" src="http://aaronliew.github.io/images/DayFour/Linear_Relative_Layout.JPG" title="RadioGroup" ></p>

<p>In activity_main.xml code, the &lsquo;RelativeLayout&#8217;is changed to the &#8216;LinearLayout&rsquo;.
The layout is set in vertical orientation as shown in the figure below.<br/>
<img class="center" src="http://aaronliew.github.io/images/DayFour/LinearLayout.JPG" title="RadioGroup" ></p>

<p>A radiogroup was created to allow user to choose the options either movie or people.
First of all, the id of the radiobuttons are set as shown below. The red circles is id
of the widgets whereas the green circle is the text of the widgets.
<img class="center" src="http://aaronliew.github.io/images/DayFour/RadioGroup_EditText.JPG" title="RadioGroup" ></p>

<p>A button was created to allow user to search for a movie or people once user clicks on it.
<img class="center" src="http://aaronliew.github.io/images/DayFour/Button.JPG" title="Button" ></p>

<p>All the text of the widgets was set in string.xml which is important for localization.
<img class="center" src="http://aaronliew.github.io/images/DayFour/string_xml.JPG" title="Button" ></p>

<p>To shows the relationship between the MainActivity java and the xml file, the figure was drawn
as shown in the figure below.
<img class="center" src="http://aaronliew.github.io/images/DayFour/ClassInteraction.JPG" title="Button" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Progress Bar and Action Bar]]></title>
    <link href="http://aaronliew.github.io/blog/2014/03/03/day-three/"/>
    <updated>2014-03-03T12:10:54+08:00</updated>
    <id>http://aaronliew.github.io/blog/2014/03/03/day-three</id>
    <content type="html"><![CDATA[<p>Each of android application has its own unique icon. In AndroidManifest.xml,
&ldquo;android:icon=&rdquo;@drawable/ic_launcher&#8221; means the application icon refers to
the image at the directory of /drawable/ic_launcher. Therefore, application icon
can be changed by overwrite the image at this directory. The image can be overwritten
by creating the new android icon and browse image from directory of downloaded image.
The result is shown in the figure below.</p>

<p><img class="center" src="http://aaronliew.github.io/images/DayThree/AppIcon.png" title="Application Icon" ></p>

<p>Progress bar is the indicator of the progress of an activity. It can be done by dragging
the progress bar into the UI. In order to show progress bar at center of the application,
the code &ldquo;android:layout_centerInParent=&#8221;true&rdquo;&ldquo; was added into the main.xml file.
The result is shown in the figure below.</p>

<p><img class="center" src="http://aaronliew.github.io/images/DayThree/ProgressBar.png" title="Progress Bar" ></p>

<p>The purpose of action bar in this android application is to allow user to access to the
help/about. Therefore, external library &ldquo;ActionBarSherlock&rdquo; was added to add action bar
into the application. The id, icon, and title of the help and about of the menu were set
in menu/option.xml file. The code of option.xml is shown in the figure below.</p>

<p><img class="center" src="http://aaronliew.github.io/images/DayThree/MainXml.JPG" title="Menu" ></p>

<p>Next, in the src/main activity java file, the class was extended with SherlockFragmentActivty.
The method onOptionsItemSelected was created to perform the action once user clicks on the
help/about in the menu. The code of main activity java file is shown below.
<img class="center" src="http://aaronliew.github.io/images/DayThree/MainActivityJava.JPG" title="Menu" ></p>

<p>When user clicks on the menu button, the result is illustrated as follows:</p>

<p><img class="center" src="http://aaronliew.github.io/images/DayThree/ScreenMenu.png" title="Menu" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android App: Interaction Between Two Activities]]></title>
    <link href="http://aaronliew.github.io/blog/2014/02/25/day-two/"/>
    <updated>2014-02-25T09:37:09+08:00</updated>
    <id>http://aaronliew.github.io/blog/2014/02/25/day-two</id>
    <content type="html"><![CDATA[<p>First of all, user will insert text into the textbox and press the &lsquo;send&rsquo; button.
In MainActivity class, the &lsquo;intent&rsquo; object store the values. Next, the DisplayMessageActivity
will display the message which is inserted by the user. In order to have clearer picture on the
operation of Android app and interactions between classes, I have created the charts as shown below.</p>

<p><img class="center" src="http://aaronliew.github.io/images/DayTwo/ExplanationOfActivities.JPG" title="Explanation Of Activities" ></p>

<p><img class="center" src="http://aaronliew.github.io/images/DayTwo/ClassInteraction.JPG" title="Interaction between class" ></p>

<p>The result is shown in figure below.</p>

<p><img class="center" src="http://aaronliew.github.io/images/DayTwo/Screenshot.JPG" title="Screenshot" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogging With Octopress]]></title>
    <link href="http://aaronliew.github.io/blog/2014/02/24/day-one/"/>
    <updated>2014-02-24T11:08:29+08:00</updated>
    <id>http://aaronliew.github.io/blog/2014/02/24/day-one</id>
    <content type="html"><![CDATA[<p>Today, my primary task was to create blog using Octopress in order to
write down the progress of my android development.
First of all, after setup the Octopress, there are two commands needed to
create the .MarkDown extension file, set the title of the post, and preview the blog
: rake preview and rake new_post. The explanation of the commands
is shown in the figure below.</p>

<p><img src="http://aaronliew.github.io/images/DayOne/BlogConfiguration.JPG" title="Blog setup using command line" ></p>

<p>After creating the new post, I have made amendments in _config yml file
in order to configure the title, subtitle and author of the blog. The code
of yml file is shown in the figure below.</p>

<p><img class="center" src="http://aaronliew.github.io/images/DayOne/ConfigureYML.JPG" title="config yml file coding" ></p>

<p>The definition of the respective code in the _config yml file is shown in
figure below.</p>

<p><img src="http://aaronliew.github.io/images/DayOne/configYML.JPG" title="Explanation of config yml coding" ></p>

<p>Next, to set the title, comments and category of the the blog, I have
modified the coding of the file with MarkDown extension as shown below. <br/>
<img class="center" src="http://aaronliew.github.io/images/DayOne/MarkDown.JPG" title="Setting of blog post" ></p>

<p>The definition of the respective code in the .MarkDown extension yml file is shown in
figure below.
<img src="http://aaronliew.github.io/images/DayOne/MarkDownImage.JPG" title="Explanation of MarkDown extension file coding" ></p>
]]></content>
  </entry>
  
</feed>
